<?xml version="1.0" encoding="utf-8"?>
<configuration>
  <!-- http://joe.blog.freemansoft.com -->
  <configSections>
    <!-- configure log4net using this file -->
    <section name="log4net" type="log4net.Config.Log4NetConfigurationSectionHandler, log4net" />
    <!-- configure spring.net using this file -->
    <sectionGroup name="spring">
      <section name="context" type="Spring.Context.Support.ContextHandler, Spring.Core"/>
      <section name="objects" type="Spring.Context.Support.DefaultSectionHandler, Spring.Core" />
    </sectionGroup>
  </configSections>


  <!-- ************************************************************************************* -->
  <!-- log4net configuration so we don't have to have separate file -->
  <!-- ************************************************************************************* -->
  <log4net>
    <appender name="Console" type="log4net.Appender.ConsoleAppender">
      <layout type="log4net.Layout.PatternLayout">
        <conversionPattern value="%date [%thread] %-5level %logger - %message%newline" />
      </layout>
    </appender>
    <appender name="RollingFile" type="log4net.Appender.RollingFileAppender">
      <file value="example.log" />
      <appendToFile value="true" />
      <maximumFileSize value="100KB" />
      <maxSizeRollBackups value="2" />
      <layout type="log4net.Layout.PatternLayout">
        <conversionPattern value="%level %thread %logger - %message%newline" />
      </layout>
    </appender>
    <root>
      <level value="DEBUG" />
      <appender-ref ref="Console" />
      <appender-ref ref="RollingFile" />
    </root>
  </log4net>
  
  <appSettings>
    <!-- *************************************************************************************
          TFS connection and filtering
          The list of TFS collection and projects that are monitored is defined below in "myBuildAdapters"
         ************************************************************************************* -->
    <!-- -->
    <add key="Tfs.Url" value="https://tfs.yourdomain.net/tfs/yourcollection" />
    <add key="Tfs.Username" value="userid" />
    <add key="Tfs.Password" value="password" />
    <add key="Tfs.Domain" value="your_ad_domain" />
    <!-- -->
    <!-- *************************************************************************************
          device communication configuration
          These values are fed into the com port device object down below via the property mapper
          Joe's test setup: test rig has arduino on COM7 and Freemometer on COM2 at home CheapLaunchpadMSP430 on COM?
          Joe's prod setup:  Arduino with 4 lights on COM5
          CheapLaunchpadMSP430 actual speed is 9600 but can be set at 19200 because Serial over USB masks that on my PC
         ************************************************************************************* -->
    <add key="Device.Serial.ComPort" value="COM13" />
    <add key="Device.Serial.DataRate" value="19200" />
    <!-- ************************************************************************************* -->
    <!-- remember to set the build patterns down below -->
    <!-- ************************************************************************************* -->

    <add key="ClientSettingsProvider.ServiceUri" value="" />
  </appSettings>
  <startup>
    <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.0" />
  </startup>


  <!-- ************************************************************************************* -->
  <!-- spring wiring  -->
  <!-- ************************************************************************************* -->
  <spring>

    <context>
      <resource uri="config://spring/objects"/>
    </context>

    <objects xmlns="http://www.springframework.net" >
      <description>An  example that demonstrates simple IoC features.</description>

      <!-- define where we'd like to do variable replacement from -->
      <object type="Spring.Objects.Factory.Config.VariablePlaceholderConfigurer, Spring.Core">
        <property name="VariableSources">
          <list>
            <!-- supports arbitrary list of locations we can do variable replacement from -->
            <object type="Spring.Objects.Factory.Config.ConfigSectionVariableSource, Spring.Core">
              <!-- Sections to read, sepearated by comma (leave out spaces) -->
              <property name="SectionNames"
                        value="appSettings" />
            </object>
          </list>
        </property>
      </object>

      <!-- valid devices are "ArduinoDualRGB" and "Freemometer", "CheapLaunchpadMSP430" or "SimulatedDevice"  as defined below -->
      <object name="myDriverInstance" type="BuildWatcher.BuildWatchDriver, BuildWatcher" lazy-init="true">
        <constructor-arg ref="myBuildAdapters"/>
        <constructor-arg ref="SimulatedDevice"/>
        <constructor-arg value="30000" />
        <constructor-arg value="500" />
      </object>

      <!-- singleton that describes the connection to TFS lazy init so we can give better diagnostics in the code-->
      <object name="myBuildServerConnection" type="BuildWatcher.TfsBuildConnection, BuildWatcher" lazy-init="true">
        <constructor-arg value="${Tfs.Url}" />
        <constructor-arg value="${Tfs.Username}" />
        <constructor-arg value="${Tfs.Password}" />
        <constructor-arg value="${Tfs.Domain}" />
      </object>

      
      <!-- There is one build adapter for each light, each group of builds monitored as a group-->
      <object id="myBuildAdapters" type="System.Collections.Generic.List&lt;BuildWatcher.TfsBuildAdapter>" lazy-init="true" >
        <constructor-arg name="collection">
          <list element-type="BuildWatcher.TfsBuildAdapter, BuildWatcher">
            <!--
              You should only enable as many build adapters as you have lights!
              constructor-args are
              TFS Build Server connection
              TFS Team Project name
              TFS Build definition pattern
            -->
            <object type="BuildWatcher.TfsBuildAdapter, BuildWatcher">
              <constructor-arg ref="myBuildServerConnection" />
              <constructor-arg value="MSI" />
              <constructor-arg value="CI_vNext*" />
            </object>
            <object type="BuildWatcher.TfsBuildAdapter, BuildWatcher">
              <constructor-arg ref="myBuildServerConnection" />
              <constructor-arg value="MSI" />
              <constructor-arg value="V_vNext*" />
            </object>
            <object type="BuildWatcher.TfsBuildAdapter, BuildWatcher">
              <constructor-arg ref="myBuildServerConnection" />
              <constructor-arg value="MSI" />
              <constructor-arg value="P_Main*" />
            </object>
            <object type="BuildWatcher.TfsBuildAdapter, BuildWatcher">
              <constructor-arg ref="myBuildServerConnection" />
              <constructor-arg value="MSI" />
              <constructor-arg value="V_RC*" />
            </object>
          </list>
        </constructor-arg>
      </object>
      

      <!-- ************************************************************************************* -->
      <!-- device dependent configuration  -->
      <!-- devices must implement IBuildIndicatorDevice -->
      <!-- ************************************************************************************* -->

      <object name="mySerialPort" type="System.IO.Ports.SerialPort, System" lazy-init="true" init-method="Open" >
        <property name="PortName" value="${Device.Serial.ComPort}"/>
        <property name="BaudRate" value="${Device.Serial.DataRate}"/>
        <property name="ReadTimeout" value="500"/>
        <property name="WriteTimeout" value="500"/>
        <property name="HandShake" value="None" />
      </object>

      <!--
      these devices vary from 2-32 lamps
      used to turn off the lamps because the device can't tell you how many it has
      direct USB connected devices reset on connection.  Bluetooth devices do not
      (com port, reset on connect, number of bulbs)
      -->
      <object name="ArduinoDualRGB" type="BuildWatcher.Devices.ArduinoDualRGB, BuildWatcher" lazy-init="true">
        <constructor-arg ref="mySerialPort"/>
        <constructor-arg value="false" />
        <constructor-arg value="4" />
      </object>
     <!-- 
      single lamp device with mechanical ringer
      ringer pattern for build failure types. Set to 0 for silence
      This device rings until build is complete! That can be annoying.
      RingTime is in msec. RingTime should be shorter than the polling interval 
      (com port, signal pattern complete failure signal pattern partial failure, ring time on failure)
      -->
      <object name="Freemometer" type="BuildWatcher.Devices.Freemometer, BuildWatcher" lazy-init="true">
        <constructor-arg ref="mySerialPort"/>
        <constructor-arg value="1" />
        <constructor-arg value="7" />
        <constructor-arg value="3000" />
      </object>
      <!-- 
      single lamp device patterns range from 0..9 - 0 is off and 1 is solid
      Note: Sparkfun bluesmirf bluetooth adapters create two com ports when bound. The first one is the outbound 
      (com port, signal pattern complete failure signal pattern partial failure)
      -->
      <object name="CheapLaunchpadMSP430" type="BuildWatcher.Devices.CheapLaunchpadMSP430, BuildWatcher" lazy-init="true">
        <constructor-arg ref="mySerialPort"/>
        <constructor-arg value="1" />
        <constructor-arg value="7" />
      </object>

      <!-- device that just logs for people that want to test but have no hardware -->
      <object name="SimulatedDevice" type="BuildWatcher.Devices.SimulatedDevice, BuildWatcher">
      </object>
    </objects>    
  </spring>


  <!-- added by Spring.net? -->
  <system.web>
    <membership defaultProvider="ClientAuthenticationMembershipProvider">
      <providers>
        <add name="ClientAuthenticationMembershipProvider" type="System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider, System.Web.Extensions, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" serviceUri="" />
      </providers>
    </membership>
    <roleManager defaultProvider="ClientRoleProvider" enabled="true">
      <providers>
        <add name="ClientRoleProvider" type="System.Web.ClientServices.Providers.ClientRoleProvider, System.Web.Extensions, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" serviceUri="" cacheTimeout="86400" />
      </providers>
    </roleManager>
  </system.web>
  <runtime>
    <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
      <dependentAssembly>
        <assemblyIdentity name="Common.Logging" publicKeyToken="af08829b84f0328e" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-1.2.0.0" newVersion="1.2.0.0" />
      </dependentAssembly>
    </assemblyBinding>
  </runtime>
</configuration>